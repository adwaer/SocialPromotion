namespace Nanny.Dal.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class country_string_Id : DbMigration
    {
        public override void Up()
        {
            DropForeignKey("dbo.LangCultureCountries", "Country_Id", "dbo.Countries");
            DropForeignKey("dbo.Languages", "OwnerCountry_Id", "dbo.Countries");
            DropForeignKey("dbo.Addresses", "Country_Id", "dbo.Countries");
            DropForeignKey("dbo.Educations", "OwnerCountry_Id", "dbo.Countries");
            DropForeignKey("dbo.HttpDomains", "Country_Id", "dbo.Countries");
            DropForeignKey("dbo.Metroes", "OwnerCountry_Id", "dbo.Countries");
            DropForeignKey("dbo.WorkingConditions", "OwnerCountry_Id", "dbo.Countries");
            DropForeignKey("dbo.WorkingExperienceAges", "OwnerCountry_Id", "dbo.Countries");
            DropForeignKey("dbo.WorkingSkills", "OwnerCountry_Id", "dbo.Countries");
            DropForeignKey("dbo.WorkingTerms", "OwnerCountry_Id", "dbo.Countries");
            DropIndex("dbo.Addresses", new[] { "Country_Id" });
            DropIndex("dbo.Languages", new[] { "OwnerCountry_Id" });
            DropIndex("dbo.Educations", new[] { "OwnerCountry_Id" });
            DropIndex("dbo.HttpDomains", new[] { "Country_Id" });
            DropIndex("dbo.Metroes", new[] { "OwnerCountry_Id" });
            DropIndex("dbo.WorkingConditions", new[] { "OwnerCountry_Id" });
            DropIndex("dbo.WorkingExperienceAges", new[] { "OwnerCountry_Id" });
            DropIndex("dbo.WorkingSkills", new[] { "OwnerCountry_Id" });
            DropIndex("dbo.WorkingTerms", new[] { "OwnerCountry_Id" });
            DropIndex("dbo.LangCultureCountries", new[] { "Country_Id" });
            RenameColumn(table: "dbo.Addresses", name: "Country_Id", newName: "Country_Iso");
            RenameColumn(table: "dbo.LangCultureCountries", name: "Country_Id", newName: "Country_Iso");
            RenameColumn(table: "dbo.Languages", name: "OwnerCountry_Id", newName: "OwnerCountry_Iso");
            RenameColumn(table: "dbo.Educations", name: "OwnerCountry_Id", newName: "OwnerCountry_Iso");
            RenameColumn(table: "dbo.HttpDomains", name: "Country_Id", newName: "Country_Iso");
            RenameColumn(table: "dbo.Metroes", name: "OwnerCountry_Id", newName: "OwnerCountry_Iso");
            RenameColumn(table: "dbo.WorkingConditions", name: "OwnerCountry_Id", newName: "OwnerCountry_Iso");
            RenameColumn(table: "dbo.WorkingExperienceAges", name: "OwnerCountry_Id", newName: "OwnerCountry_Iso");
            RenameColumn(table: "dbo.WorkingSkills", name: "OwnerCountry_Id", newName: "OwnerCountry_Iso");
            RenameColumn(table: "dbo.WorkingTerms", name: "OwnerCountry_Id", newName: "OwnerCountry_Iso");
            DropPrimaryKey("dbo.Countries");
            DropPrimaryKey("dbo.LangCultureCountries");
            AddColumn("dbo.Languages", "OwnerCountryId", c => c.String());
            AddColumn("dbo.Educations", "OwnerCountryId", c => c.String());
            AddColumn("dbo.HttpDomains", "CountryId", c => c.String());
            AddColumn("dbo.Metroes", "OwnerCountryId", c => c.String());
            AddColumn("dbo.WorkingConditions", "OwnerCountryId", c => c.String());
            AddColumn("dbo.WorkingExperienceAges", "OwnerCountryId", c => c.String());
            AddColumn("dbo.WorkingSkills", "OwnerCountryId", c => c.String());
            AddColumn("dbo.WorkingTerms", "OwnerCountryId", c => c.String());
            AlterColumn("dbo.Addresses", "Country_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.Countries", "Iso", c => c.String(nullable: false, maxLength: 128));
            AlterColumn("dbo.Languages", "OwnerCountry_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.Educations", "OwnerCountry_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.HttpDomains", "Country_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.Metroes", "OwnerCountry_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.WorkingConditions", "OwnerCountry_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.WorkingExperienceAges", "OwnerCountry_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.WorkingSkills", "OwnerCountry_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.WorkingTerms", "OwnerCountry_Iso", c => c.String(maxLength: 128));
            AlterColumn("dbo.LangCultureCountries", "Country_Iso", c => c.String(nullable: false, maxLength: 128));
            AddPrimaryKey("dbo.Countries", "Iso");
            AddPrimaryKey("dbo.LangCultureCountries", new[] { "LangCulture_Id", "Country_Iso" });
            CreateIndex("dbo.Addresses", "Country_Iso");
            CreateIndex("dbo.Languages", "OwnerCountry_Iso");
            CreateIndex("dbo.Educations", "OwnerCountry_Iso");
            CreateIndex("dbo.HttpDomains", "Country_Iso");
            CreateIndex("dbo.Metroes", "OwnerCountry_Iso");
            CreateIndex("dbo.WorkingConditions", "OwnerCountry_Iso");
            CreateIndex("dbo.WorkingExperienceAges", "OwnerCountry_Iso");
            CreateIndex("dbo.WorkingSkills", "OwnerCountry_Iso");
            CreateIndex("dbo.WorkingTerms", "OwnerCountry_Iso");
            CreateIndex("dbo.LangCultureCountries", "Country_Iso");
            AddForeignKey("dbo.LangCultureCountries", "Country_Iso", "dbo.Countries", "Iso", cascadeDelete: true);
            AddForeignKey("dbo.Languages", "OwnerCountry_Iso", "dbo.Countries", "Iso");
            AddForeignKey("dbo.Addresses", "Country_Iso", "dbo.Countries", "Iso");
            AddForeignKey("dbo.Educations", "OwnerCountry_Iso", "dbo.Countries", "Iso");
            AddForeignKey("dbo.HttpDomains", "Country_Iso", "dbo.Countries", "Iso");
            AddForeignKey("dbo.Metroes", "OwnerCountry_Iso", "dbo.Countries", "Iso");
            AddForeignKey("dbo.WorkingConditions", "OwnerCountry_Iso", "dbo.Countries", "Iso");
            AddForeignKey("dbo.WorkingExperienceAges", "OwnerCountry_Iso", "dbo.Countries", "Iso");
            AddForeignKey("dbo.WorkingSkills", "OwnerCountry_Iso", "dbo.Countries", "Iso");
            AddForeignKey("dbo.WorkingTerms", "OwnerCountry_Iso", "dbo.Countries", "Iso");
            DropColumn("dbo.Countries", "Id");
        }
        
        public override void Down()
        {
            AddColumn("dbo.Countries", "Id", c => c.Int(nullable: false, identity: true));
            DropForeignKey("dbo.WorkingTerms", "OwnerCountry_Iso", "dbo.Countries");
            DropForeignKey("dbo.WorkingSkills", "OwnerCountry_Iso", "dbo.Countries");
            DropForeignKey("dbo.WorkingExperienceAges", "OwnerCountry_Iso", "dbo.Countries");
            DropForeignKey("dbo.WorkingConditions", "OwnerCountry_Iso", "dbo.Countries");
            DropForeignKey("dbo.Metroes", "OwnerCountry_Iso", "dbo.Countries");
            DropForeignKey("dbo.HttpDomains", "Country_Iso", "dbo.Countries");
            DropForeignKey("dbo.Educations", "OwnerCountry_Iso", "dbo.Countries");
            DropForeignKey("dbo.Addresses", "Country_Iso", "dbo.Countries");
            DropForeignKey("dbo.Languages", "OwnerCountry_Iso", "dbo.Countries");
            DropForeignKey("dbo.LangCultureCountries", "Country_Iso", "dbo.Countries");
            DropIndex("dbo.LangCultureCountries", new[] { "Country_Iso" });
            DropIndex("dbo.WorkingTerms", new[] { "OwnerCountry_Iso" });
            DropIndex("dbo.WorkingSkills", new[] { "OwnerCountry_Iso" });
            DropIndex("dbo.WorkingExperienceAges", new[] { "OwnerCountry_Iso" });
            DropIndex("dbo.WorkingConditions", new[] { "OwnerCountry_Iso" });
            DropIndex("dbo.Metroes", new[] { "OwnerCountry_Iso" });
            DropIndex("dbo.HttpDomains", new[] { "Country_Iso" });
            DropIndex("dbo.Educations", new[] { "OwnerCountry_Iso" });
            DropIndex("dbo.Languages", new[] { "OwnerCountry_Iso" });
            DropIndex("dbo.Addresses", new[] { "Country_Iso" });
            DropPrimaryKey("dbo.LangCultureCountries");
            DropPrimaryKey("dbo.Countries");
            AlterColumn("dbo.LangCultureCountries", "Country_Iso", c => c.Int(nullable: false));
            AlterColumn("dbo.WorkingTerms", "OwnerCountry_Iso", c => c.Int());
            AlterColumn("dbo.WorkingSkills", "OwnerCountry_Iso", c => c.Int());
            AlterColumn("dbo.WorkingExperienceAges", "OwnerCountry_Iso", c => c.Int());
            AlterColumn("dbo.WorkingConditions", "OwnerCountry_Iso", c => c.Int());
            AlterColumn("dbo.Metroes", "OwnerCountry_Iso", c => c.Int());
            AlterColumn("dbo.HttpDomains", "Country_Iso", c => c.Int());
            AlterColumn("dbo.Educations", "OwnerCountry_Iso", c => c.Int());
            AlterColumn("dbo.Languages", "OwnerCountry_Iso", c => c.Int());
            AlterColumn("dbo.Countries", "Iso", c => c.String());
            AlterColumn("dbo.Addresses", "Country_Iso", c => c.Int());
            DropColumn("dbo.WorkingTerms", "OwnerCountryId");
            DropColumn("dbo.WorkingSkills", "OwnerCountryId");
            DropColumn("dbo.WorkingExperienceAges", "OwnerCountryId");
            DropColumn("dbo.WorkingConditions", "OwnerCountryId");
            DropColumn("dbo.Metroes", "OwnerCountryId");
            DropColumn("dbo.HttpDomains", "CountryId");
            DropColumn("dbo.Educations", "OwnerCountryId");
            DropColumn("dbo.Languages", "OwnerCountryId");
            AddPrimaryKey("dbo.LangCultureCountries", new[] { "LangCulture_Id", "Country_Id" });
            AddPrimaryKey("dbo.Countries", "Id");
            RenameColumn(table: "dbo.WorkingTerms", name: "OwnerCountry_Iso", newName: "OwnerCountry_Id");
            RenameColumn(table: "dbo.WorkingSkills", name: "OwnerCountry_Iso", newName: "OwnerCountry_Id");
            RenameColumn(table: "dbo.WorkingExperienceAges", name: "OwnerCountry_Iso", newName: "OwnerCountry_Id");
            RenameColumn(table: "dbo.WorkingConditions", name: "OwnerCountry_Iso", newName: "OwnerCountry_Id");
            RenameColumn(table: "dbo.Metroes", name: "OwnerCountry_Iso", newName: "OwnerCountry_Id");
            RenameColumn(table: "dbo.HttpDomains", name: "Country_Iso", newName: "Country_Id");
            RenameColumn(table: "dbo.Educations", name: "OwnerCountry_Iso", newName: "OwnerCountry_Id");
            RenameColumn(table: "dbo.Languages", name: "OwnerCountry_Iso", newName: "OwnerCountry_Id");
            RenameColumn(table: "dbo.LangCultureCountries", name: "Country_Iso", newName: "Country_Id");
            RenameColumn(table: "dbo.Addresses", name: "Country_Iso", newName: "Country_Id");
            CreateIndex("dbo.LangCultureCountries", "Country_Id");
            CreateIndex("dbo.WorkingTerms", "OwnerCountry_Id");
            CreateIndex("dbo.WorkingSkills", "OwnerCountry_Id");
            CreateIndex("dbo.WorkingExperienceAges", "OwnerCountry_Id");
            CreateIndex("dbo.WorkingConditions", "OwnerCountry_Id");
            CreateIndex("dbo.Metroes", "OwnerCountry_Id");
            CreateIndex("dbo.HttpDomains", "Country_Id");
            CreateIndex("dbo.Educations", "OwnerCountry_Id");
            CreateIndex("dbo.Languages", "OwnerCountry_Id");
            CreateIndex("dbo.Addresses", "Country_Id");
            AddForeignKey("dbo.WorkingTerms", "OwnerCountry_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.WorkingSkills", "OwnerCountry_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.WorkingExperienceAges", "OwnerCountry_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.WorkingConditions", "OwnerCountry_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.Metroes", "OwnerCountry_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.HttpDomains", "Country_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.Educations", "OwnerCountry_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.Addresses", "Country_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.Languages", "OwnerCountry_Id", "dbo.Countries", "Id");
            AddForeignKey("dbo.LangCultureCountries", "Country_Id", "dbo.Countries", "Id", cascadeDelete: true);
        }
    }
}
